#############################################################################
# Makefile for building: HammerEngine
# Generated by qmake (2.01a) (Qt 4.7.0) on: Fri 10. Dec 06:29:24 2010
# Project:  HammerEngine.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O3 -mmmx -msse -msse2 -msse3 -mfpmath=sse -DPROFILER_ENABLED -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\..\..\2010.05\qt\include" -I"..\depends\falcon\include" -I"..\depends\SDL-1.3.0\include" -I"..\depends\OpenGL\include" -I"..\depends\ThreadingBuildingBlocks\include" -I"..\..\..\2010.05\qt\include\ActiveQt" -I"release" -I"..\..\..\2010.05\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,console -mthreads -Wl
LIBS        =        -L"c:\Qt\2010.05\qt\lib" -L../depends/falcon/lib/ -lfalcon_engine.dll -L../depends/SDL-1.3.0/lib -lmingw32 -lSDLmain -lSDL -lopengl32 -L../depends/ThreadingBuildingBlocks/lib/ia32 -ltbb ../bin/tbb.dll 
QMAKE         = c:\qt\2010.05\qt\bin\qmake.exe
IDC           = c:\Qt\2010.05\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		Script.cpp \
		Graphics.cpp \
		Info.cpp \
		Logger.cpp \
		Profiler.cpp \
		ChunkedMemoryPool.cpp \
		Renderer.cpp \
		logic.cpp \
		Messenger.cpp 
OBJECTS       = release/main.o \
		release/Script.o \
		release/Graphics.o \
		release/Info.o \
		release/Logger.o \
		release/Profiler.o \
		release/ChunkedMemoryPool.o \
		release/Renderer.o \
		release/logic.o \
		release/Messenger.o
DIST          = 
QMAKE_TARGET  = HammerEngine
DESTDIR        = ..\bin\ #avoid trailing-slash linebreak
TARGET         = HammerEngine.exe
DESTDIR_TARGET = ..\bin\HammerEngine.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.HammerEngine.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec ..\..\..\2010.05\qt\mkspecs\win32-g++ CONFIG+=release -o Makefile.Release HammerEngine.pro

dist:
	$(ZIP) HammerEngine.zip $(SOURCES) $(DIST) HammerEngine.pro ..\..\..\2010.05\qt\mkspecs\qconfig.pri ..\..\..\2010.05\qt\mkspecs\modules\qt_webkit_version.pri ..\..\..\2010.05\qt\mkspecs\features\qt_functions.prf ..\..\..\2010.05\qt\mkspecs\features\qt_config.prf ..\..\..\2010.05\qt\mkspecs\features\exclusive_builds.prf ..\..\..\2010.05\qt\mkspecs\features\default_pre.prf ..\..\..\2010.05\qt\mkspecs\features\win32\default_pre.prf ..\..\..\2010.05\qt\mkspecs\features\release.prf ..\..\..\2010.05\qt\mkspecs\features\debug_and_release.prf ..\..\..\2010.05\qt\mkspecs\features\default_post.prf ..\..\..\2010.05\qt\mkspecs\features\win32\default_post.prf ..\..\..\2010.05\qt\mkspecs\features\build_pass.prf ..\..\..\2010.05\qt\mkspecs\features\win32\console.prf ..\..\..\2010.05\qt\mkspecs\features\win32\rtti.prf ..\..\..\2010.05\qt\mkspecs\features\win32\exceptions.prf ..\..\..\2010.05\qt\mkspecs\features\win32\stl.prf ..\..\..\2010.05\qt\mkspecs\features\shared.prf ..\..\..\2010.05\qt\mkspecs\features\warn_on.prf ..\..\..\2010.05\qt\mkspecs\features\qt.prf ..\..\..\2010.05\qt\mkspecs\features\win32\thread.prf ..\..\..\2010.05\qt\mkspecs\features\moc.prf ..\..\..\2010.05\qt\mkspecs\features\resources.prf ..\..\..\2010.05\qt\mkspecs\features\uic.prf ..\..\..\2010.05\qt\mkspecs\features\yacc.prf ..\..\..\2010.05\qt\mkspecs\features\lex.prf ..\..\..\2010.05\qt\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\Script.o release\Graphics.o release\Info.o release\Logger.o release\Profiler.o release\ChunkedMemoryPool.o release\Renderer.o release\logic.o release\Messenger.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/main.o: main.cpp Graphics.h \
		Profiler.h \
		Info.h \
		Logger.h \
		Messenger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/Script.o: Script.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Script.o Script.cpp

release/Graphics.o: Graphics.cpp Graphics.h \
		Profiler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Graphics.o Graphics.cpp

release/Info.o: Info.cpp Info.h \
		Logger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Info.o Info.cpp

release/Logger.o: Logger.cpp Logger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Logger.o Logger.cpp

release/Profiler.o: Profiler.cpp Profiler.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Profiler.o Profiler.cpp

release/ChunkedMemoryPool.o: ChunkedMemoryPool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ChunkedMemoryPool.o ChunkedMemoryPool.cpp

release/Renderer.o: Renderer.cpp Renderer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Renderer.o Renderer.cpp

release/logic.o: logic.cpp Profiler.h \
		Messenger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\logic.o logic.cpp

release/Messenger.o: Messenger.cpp Messenger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Messenger.o Messenger.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

